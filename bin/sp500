#!/usr/bin/env python3
import os
import sys
import argparse

project_path = os.path.realpath(os.path.dirname(__file__) + '/..')
sys.path.append(project_path)

import core.market


def print_table(args):
    try:
        print(sp500.get_table(args.name))
    except KeyError:
        print("Table {} not found".format(args.name))
        sys.exit(1)


def update_table(args):
    try:
        sp500.update_table(args.name)
    except KeyError:
        print("Table {} not found".format(args.name))
        sys.exit(1)


def update_store(args):
    sp500.update_store()


sp500 = core.market.SP500()

parser = argparse.ArgumentParser(description='S&P500 utility.')
sp = parser.add_subparsers(help='sub-command help')

update_parser = sp.add_parser('update')
update_sp = update_parser.add_subparsers()
update_store_parser = update_sp.add_parser('store', help="Update store")
update_store_parser.set_defaults(func=update_store)
update_table_parser = update_sp.add_parser('table', help="Update table by name")
update_table_parser.add_argument('name', type=str, help='Table name without (/)')
update_table_parser.set_defaults(func=update_table)

show_parser = sp.add_parser('show')
show_sp = show_parser.add_subparsers()
show_table_parser = show_sp.add_parser('table', help="Show table by name")
show_table_parser.add_argument('name', type=str, help='Table name without (/)')
show_table_parser.set_defaults(func=print_table)

args = parser.parse_args()
args.func(args)
